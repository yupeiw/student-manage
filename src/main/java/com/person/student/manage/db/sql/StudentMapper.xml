<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.person.student.manage.db.dao.StudentMapper">
<resultMap id="BaseResultMap" type="com.person.student.manage.db.entity.Student">
  <!--
    WARNING - @mbg.generated
  -->
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="name" jdbcType="VARCHAR" property="name" />
  <result column="gender" jdbcType="INTEGER" property="gender" />
  <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
  <result column="age" jdbcType="INTEGER" property="age" />
  <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
</resultMap>
<sql id="Base_Column_List">
  <!--
    WARNING - @mbg.generated
  -->
  id, `name`, gender, student_no, age, create_time, update_time
</sql>
<resultMap id="BaseResultMap" type="com.person.student.manage.db.entity.Student">
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="name" jdbcType="VARCHAR" property="name" />
  <result column="gender" jdbcType="INTEGER" property="gender" />
  <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
  <result column="age" jdbcType="INTEGER" property="age" />
  <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
</resultMap>
<sql id="Base_Column_List">
    id, `name`, gender, student_no, age, create_time, update_time
  </sql>
<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from student
  where id = #{id,jdbcType=BIGINT}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
<insert id="insert" parameterType="com.person.student.manage.db.entity.Student">
  <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
    SELECT LAST_INSERT_ID()
  </selectKey>
  insert into student (`name`, gender, student_no,
  age, create_time, update_time
  )
  values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR},
  #{age,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
  )
</insert>
<insert id="insertSelective" parameterType="com.person.student.manage.db.entity.Student">
  <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
    SELECT LAST_INSERT_ID()
  </selectKey>
  insert into student
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="name != null">
      `name`,
    </if>
    <if test="gender != null">
      gender,
    </if>
    <if test="studentNo != null">
      student_no,
    </if>
    <if test="age != null">
      age,
    </if>
    <if test="createTime != null">
      create_time,
    </if>
    <if test="updateTime != null">
      update_time,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="name != null">
      #{name,jdbcType=VARCHAR},
    </if>
    <if test="gender != null">
      #{gender,jdbcType=INTEGER},
    </if>
    <if test="studentNo != null">
      #{studentNo,jdbcType=VARCHAR},
    </if>
    <if test="age != null">
      #{age,jdbcType=INTEGER},
    </if>
    <if test="createTime != null">
      #{createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updateTime != null">
      #{updateTime,jdbcType=TIMESTAMP},
    </if>
  </trim>
</insert>
<update id="updateByPrimaryKeySelective" parameterType="com.person.student.manage.db.entity.Student">
  update student
  <set>
    <if test="name != null">
      `name` = #{name,jdbcType=VARCHAR},
    </if>
    <if test="gender != null">
      gender = #{gender,jdbcType=INTEGER},
    </if>
    <if test="studentNo != null">
      student_no = #{studentNo,jdbcType=VARCHAR},
    </if>
    <if test="age != null">
      age = #{age,jdbcType=INTEGER},
    </if>
    <if test="createTime != null">
      create_time = #{createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updateTime != null">
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </if>
  </set>
  where id = #{id,jdbcType=BIGINT}
</update>
<update id="updateByPrimaryKey" parameterType="com.person.student.manage.db.entity.Student">
    update student
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      student_no = #{studentNo,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>